<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <RootNamespace>StonkNotes.Web</RootNamespace>
    <AssemblyName>StonkNotes.Web</AssemblyName>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Application\Application.csproj" />
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets" />
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" />
    <PackageReference Include="NSwag.AspNetCore" />
    <PackageReference Include="FluentValidation.AspNetCore" />
    <PackageReference Include="HotChocolate.AspNetCore"/>
    <PackageReference Include="HotChocolate.AspNetCore.Authorization"/>    
    <PackageReference Include="HotChocolate.AspNetCore.CommandLine"/>
    <PackageReference Include="HotChocolate.Types.Analyzers">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    
    <!-- TODO: remove this PackageReference in favor of a separate CLI project, and get the CLI command to work on Linux -->
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    
  </ItemGroup>

  <!-- Auto-generated Open API specification and Angular TypeScript clients -->
<!--  <PropertyGroup>-->
<!--    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>-->
<!--  </PropertyGroup>-->

<!--  <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' And '$(SkipNSwag)' != 'True' ">-->
<!--    <Exec ConsoleToMSBuild="true"-->
<!--          ContinueOnError="true"-->
<!--          WorkingDirectory="$(ProjectDir)"-->
<!--          EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development"-->
<!--          Command="$(NSwagExe_Net80) run config.nswag /variables:Configuration=$(Configuration)">-->
<!--      <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode"/>-->
<!--      <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput"/>-->
<!--    </Exec>-->

<!--    <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low" />-->
<!--    <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'" />-->
<!--  </Target>-->

</Project>
